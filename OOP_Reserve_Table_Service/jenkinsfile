pipeline {
    agent any
  
    environment {
    GIT_URL = 'https://github.com/SJSU-Objective-Oriented-People/OOP_Reserve_Table_Service.git'
    TERRAFORM_GIT_URL = 'https://github.com/mayurigupta01/terraform-dev.git'
    TERRAFORM_BRANCH = 'np-dev'
    GIT_BRANCH = 'dev'
    DOCKER_IMAGE_NAME = "reservation-table-service"
    DOCKERFILE_PATH = "Dockerfile"
    aws_account_id  = "050101231408"
    aws_region      = "us-west-1"
    repository_name = "reserve-table-api"
      }
  
    stages {
     stage('Git Checkout') {
      steps {
          checkout([$class: 'GitSCM', branches: [[name: "${env.GIT_BRANCH}"]], 
          userRemoteConfigs:[[credentialsId: 'github-creds', url: "${env.GIT_URL}"]]])
          echo 'Checked out SCM repo'
                sh '''#!/bin/bash
                    pwd
                    ls -al
                    echo "Current User"
                    id
                '''
      }
    }
    
     stage('Build Docker Image') {
      steps {
        script {
          docker.build(env.DOCKER_IMAGE_NAME, "-f ${env.DOCKERFILE_PATH} .")
        }
      }
    }
     stage('Push to ECR') {
      steps {
      withCredentials([
          [$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', awsSecretKeyVariable: 'AWS_SECRET_ACCESS_KEY', credentialsId: 'rms-aws-creds']]) {
        sh 'aws ecr get-login-password --region ${aws_region}  | docker login --username AWS --password-stdin ${aws_account_id}.dkr.ecr.${aws_region}.amazonaws.com'
        sh 'docker tag orderservice:latest ${aws_account_id}.dkr.ecr.${aws_region}.amazonaws.com/${repository_name}:latest'
        sh 'docker push ${aws_account_id}.dkr.ecr.${aws_region}.amazonaws.com/${repository_name}:latest'
    }
  }
}
stage('Terraform git checkout') {
      steps {
          checkout([$class: 'GitSCM', branches: [[name: "${env.TERRAFORM_BRANCH}"]], 
          userRemoteConfigs:[[credentialsId: 'github-creds', url: "${env.TERRAFORM_GIT_URL}"]]])
          echo 'Checked out SCM repo'
                sh '''#!/bin/bash
                    pwd
                    ls -al
                    echo "Current User"
                    id
                '''
      }
}

   stage('Install Terraform') {
    steps {
        sh 'sudo -n curl -O https://releases.hashicorp.com/terraform/1.0.9/terraform_1.0.9_linux_amd64.zip'
        sh 'unzip -t terraform_1.0.9_linux_amd64.zip'
        sh 'ls -al'
        sh 'sudo -n unzip terraform_1.0.9_linux_amd64.zip'
        sh 'sudo -n mv terraform /usr/local/bin'
     }
   }
   
   stage('Deploy to EC2') {
            steps {
                sh 'terraform init'
                 sh 'terraform apply -auto-approve -target=module.ec2reservation'
                 script {
                  env.reservetableappserver_ip = sh(
                  script: 'terraform output reservetableappserver_ip',
                  returnStdout: true
                  ).trim()
               }
                
            }
        }
    
    }
 }
